{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/shared/PageHeader.tsx"],"sourcesContent":["import type { ReactNode } from 'react';\n\ninterface PageHeaderProps {\n  title: string;\n  description?: string;\n  actions?: ReactNode;\n}\n\nexport function PageHeader({ title, description, actions }: PageHeaderProps) {\n  return (\n    <div className=\"mb-6 md:flex md:items-center md:justify-between\">\n      <div className=\"min-w-0 flex-1\">\n        <h1 className=\"text-2xl font-bold leading-tight text-foreground sm:text-3xl sm:truncate\">\n          {title}\n        </h1>\n        {description && (\n          <p className=\"mt-1 text-sm text-muted-foreground\">{description}</p>\n        )}\n      </div>\n      {actions && <div className=\"mt-4 flex md:ml-4 md:mt-0\">{actions}</div>}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAQO,SAAS,WAAW,EAAE,KAAK,EAAE,WAAW,EAAE,OAAO,EAAmB;IACzE,qBACE,6LAAC;QAAI,WAAU;;0BACb,6LAAC;gBAAI,WAAU;;kCACb,6LAAC;wBAAG,WAAU;kCACX;;;;;;oBAEF,6BACC,6LAAC;wBAAE,WAAU;kCAAsC;;;;;;;;;;;;YAGtD,yBAAW,6LAAC;gBAAI,WAAU;0BAA6B;;;;;;;;;;;;AAG9D;KAdgB","debugId":null}},
    {"offset": {"line": 68, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,SAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 171, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/dialog.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as DialogPrimitive from \"@radix-ui/react-dialog\"\nimport { X } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Dialog = DialogPrimitive.Root\n\nconst DialogTrigger = DialogPrimitive.Trigger\n\nconst DialogPortal = DialogPrimitive.Portal\n\nconst DialogClose = DialogPrimitive.Close\n\nconst DialogOverlay = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Overlay\n    ref={ref}\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogOverlay.displayName = DialogPrimitive.Overlay.displayName\n\nconst DialogContent = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Content>\n>(({ className, children, ...props }, ref) => (\n  <DialogPortal>\n    <DialogOverlay />\n    <DialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className\n      )}\n      {...props}\n    >\n      {children}\n      <DialogPrimitive.Close className=\"absolute right-4 top-4 rounded-sm opacity-70 ring-offset-background transition-opacity hover:opacity-100 focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:pointer-events-none data-[state=open]:bg-accent data-[state=open]:text-muted-foreground\">\n        <X className=\"h-4 w-4\" />\n        <span className=\"sr-only\">Close</span>\n      </DialogPrimitive.Close>\n    </DialogPrimitive.Content>\n  </DialogPortal>\n))\nDialogContent.displayName = DialogPrimitive.Content.displayName\n\nconst DialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-1.5 text-center sm:text-left\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogHeader.displayName = \"DialogHeader\"\n\nconst DialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className\n    )}\n    {...props}\n  />\n)\nDialogFooter.displayName = \"DialogFooter\"\n\nconst DialogTitle = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Title\n    ref={ref}\n    className={cn(\n      \"text-lg font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nDialogTitle.displayName = DialogPrimitive.Title.displayName\n\nconst DialogDescription = React.forwardRef<\n  React.ElementRef<typeof DialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof DialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <DialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nDialogDescription.displayName = DialogPrimitive.Description.displayName\n\nexport {\n  Dialog,\n  DialogPortal,\n  DialogOverlay,\n  DialogClose,\n  DialogTrigger,\n  DialogContent,\n  DialogHeader,\n  DialogFooter,\n  DialogTitle,\n  DialogDescription,\n}\n"],"names":[],"mappings":";;;;;;;;;;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,SAAS,qKAAA,CAAA,OAAoB;AAEnC,MAAM,gBAAgB,qKAAA,CAAA,UAAuB;AAE7C,MAAM,eAAe,qKAAA,CAAA,SAAsB;AAE3C,MAAM,cAAc,qKAAA,CAAA,QAAqB;AAEzC,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAGnC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,UAAuB;QACtB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,0JACA;QAED,GAAG,KAAK;;;;;;KAVP;AAaN,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,8BAAgB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGnC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE,oBACpC,6LAAC;;0BACC,6LAAC;;;;;0BACD,6LAAC,qKAAA,CAAA,UAAuB;gBACtB,KAAK;gBACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,+fACA;gBAED,GAAG,KAAK;;oBAER;kCACD,6LAAC,qKAAA,CAAA,QAAqB;wBAAC,WAAU;;0CAC/B,6LAAC,+LAAA,CAAA,IAAC;gCAAC,WAAU;;;;;;0CACb,6LAAC;gCAAK,WAAU;0CAAU;;;;;;;;;;;;;;;;;;;;;;;;;AAKlC,cAAc,WAAW,GAAG,qKAAA,CAAA,UAAuB,CAAC,WAAW;AAE/D,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,eAAe,CAAC,EACpB,SAAS,EACT,GAAG,OACkC,iBACrC,6LAAC;QACC,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,iEACA;QAED,GAAG,KAAK;;;;;;MATP;AAYN,aAAa,WAAW,GAAG;AAE3B,MAAM,4BAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,QAAqB;QACpB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,qDACA;QAED,GAAG,KAAK;;;;;;;AAGb,YAAY,WAAW,GAAG,qKAAA,CAAA,QAAqB,CAAC,WAAW;AAE3D,MAAM,kCAAoB,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,QAGvC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,qKAAA,CAAA,cAA2B;QAC1B,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;;AAGb,kBAAkB,WAAW,GAAG,qKAAA,CAAA,cAA2B,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 322, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,mKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,oKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;;AAGb,MAAM,WAAW,GAAG,oKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 361, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAEA;AAEA;AACA;AASA;AACA;;;AAfA;;;;;;AAiBA,MAAM,OAAO,iKAAA,CAAA,eAAY;AASzB,MAAM,iCAAmB,CAAA,GAAA,6JAAA,CAAA,gBAAmB,AAAD,EACzC,CAAC;AAGH,MAAM,YAAY,CAGhB,EACA,GAAG,OACkC;IACrC,qBACE,6LAAC,iBAAiB,QAAQ;QAAC,OAAO;YAAE,MAAM,MAAM,IAAI;QAAC;kBACnD,cAAA,6LAAC,iKAAA,CAAA,aAAU;YAAE,GAAG,KAAK;;;;;;;;;;;AAG3B;KAXM;AAaN,MAAM,eAAe;;IACnB,MAAM,eAAe,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAAE;IACtC,MAAM,cAAc,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,EAAE;IACrC,MAAM,EAAE,aAAa,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,iKAAA,CAAA,iBAAc,AAAD;IAElD,MAAM,aAAa,cAAc,aAAa,IAAI,EAAE;IAEpD,IAAI,CAAC,cAAc;QACjB,MAAM,IAAI,MAAM;IAClB;IAEA,MAAM,EAAE,EAAE,EAAE,GAAG;IAEf,OAAO;QACL;QACA,MAAM,aAAa,IAAI;QACvB,YAAY,GAAG,GAAG,UAAU,CAAC;QAC7B,mBAAmB,GAAG,GAAG,sBAAsB,CAAC;QAChD,eAAe,GAAG,GAAG,kBAAkB,CAAC;QACxC,GAAG,UAAU;IACf;AACF;GArBM;;QAGiC,iKAAA,CAAA,iBAAc;;;AAwBrD,MAAM,gCAAkB,CAAA,GAAA,6JAAA,CAAA,gBAAmB,AAAD,EACxC,CAAC;AAGH,MAAM,yBAAW,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;;IAC1B,MAAM,KAAK,CAAA,GAAA,6JAAA,CAAA,QAAW,AAAD;IAErB,qBACE,6LAAC,gBAAgB,QAAQ;QAAC,OAAO;YAAE;QAAG;kBACpC,cAAA,6LAAC;YAAI,KAAK;YAAK,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,aAAa;YAAa,GAAG,KAAK;;;;;;;;;;;AAGrE;;AACA,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;;IAC1B,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,GAAG;IAE9B,qBACE,6LAAC,oIAAA,CAAA,QAAK;QACJ,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,SAAS,oBAAoB;QAC3C,SAAS;QACR,GAAG,KAAK;;;;;;AAGf;;QAVgC;;;;QAAA;;;;AAWhC,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAGjC,CAAC,EAAE,GAAG,OAAO,EAAE;;IACf,MAAM,EAAE,KAAK,EAAE,UAAU,EAAE,iBAAiB,EAAE,aAAa,EAAE,GAAG;IAEhE,qBACE,6LAAC,mKAAA,CAAA,OAAI;QACH,KAAK;QACL,IAAI;QACJ,oBACE,CAAC,QACG,GAAG,mBAAmB,GACtB,GAAG,kBAAkB,CAAC,EAAE,eAAe;QAE7C,gBAAc,CAAC,CAAC;QACf,GAAG,KAAK;;;;;;AAGf;;QAfkE;;;;QAAA;;;;AAgBlE,YAAY,WAAW,GAAG;AAE1B,MAAM,gCAAkB,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;;IAC1B,MAAM,EAAE,iBAAiB,EAAE,GAAG;IAE9B,qBACE,6LAAC;QACC,KAAK;QACL,IAAI;QACJ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGf;;QAVgC;;;;QAAA;;;;AAWhC,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,IAAA,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,YAGjC,CAAC,EAAE,SAAS,EAAE,QAAQ,EAAE,GAAG,OAAO,EAAE;;IACpC,MAAM,EAAE,KAAK,EAAE,aAAa,EAAE,GAAG;IACjC,MAAM,OAAO,QAAQ,OAAO,OAAO,WAAW,MAAM;IAEpD,IAAI,CAAC,MAAM;QACT,OAAO;IACT;IAEA,qBACE,6LAAC;QACC,KAAK;QACL,IAAI;QACJ,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE,wCAAwC;QACrD,GAAG,KAAK;kBAER;;;;;;AAGP;;QAjBmC;;;;QAAA;;;;AAkBnC,YAAY,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 579, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/checkbox.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\"\nimport { Check } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"h-4 w-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n))\nCheckbox.displayName = CheckboxPrimitive.Root.displayName\n\nexport { Checkbox }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,yBAAW,CAAA,GAAA,6JAAA,CAAA,aAAgB,AAAD,OAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,6LAAC,uKAAA,CAAA,OAAsB;QACrB,KAAK;QACL,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EACV,kTACA;QAED,GAAG,KAAK;kBAET,cAAA,6LAAC,uKAAA,CAAA,YAA2B;YAC1B,WAAW,CAAA,GAAA,sHAAA,CAAA,KAAE,AAAD,EAAE;sBAEd,cAAA,6LAAC,uMAAA,CAAA,QAAK;gBAAC,WAAU;;;;;;;;;;;;;;;;;AAIvB,SAAS,WAAW,GAAG,uKAAA,CAAA,OAAsB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 631, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/chat/CreateGroupDialog.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState } from \"react\";\nimport { useForm } from \"react-hook-form\";\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport * as z from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport {\n  Form,\n  FormControl,\n  FormDescription,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport type { UserProfile, GroupChat } from \"@/types\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { mockUsers, mockGroupChats } from \"@/lib/mock-data\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport { formatISO } from \"date-fns\";\nimport { getInitials } from \"@/lib/utils\";\nimport { Loader2 } from \"lucide-react\";\n\nconst createGroupSchema = z.object({\n  groupName: z.string().min(3, { message: \"Group name must be at least 3 characters.\" }),\n  memberIds: z.array(z.string()).min(1, { message: \"Select at least one member.\" }),\n});\n\ntype CreateGroupFormValues = z.infer<typeof createGroupSchema>;\n\ninterface CreateGroupDialogProps {\n  onGroupCreated: (newGroup: GroupChat) => void;\n  children: React.ReactNode; // Trigger element\n}\n\nexport function CreateGroupDialog({ onGroupCreated, children }: CreateGroupDialogProps) {\n  const { currentUser } = useAuth();\n  const { toast } = useToast();\n  const [isOpen, setIsOpen] = useState(false);\n  const [isSubmitting, setIsSubmitting] = useState(false);\n\n  const availableMembers = mockUsers.filter(user => user.uid !== currentUser?.uid);\n\n  const form = useForm<CreateGroupFormValues>({\n    resolver: zodResolver(createGroupSchema),\n    defaultValues: {\n      groupName: \"\",\n      memberIds: [],\n    },\n  });\n\n  function onSubmit(data: CreateGroupFormValues) {\n    if (!currentUser) {\n      toast({ title: \"Error\", description: \"You must be logged in to create a group.\", variant: \"destructive\" });\n      return;\n    }\n    setIsSubmitting(true);\n\n    const newGroupId = `group-${Date.now()}`;\n    const allMemberIds = Array.from(new Set([currentUser.uid, ...data.memberIds])); // Ensure creator is a member\n\n    const newGroup: GroupChat = {\n      id: newGroupId,\n      name: data.groupName,\n      memberIds: allMemberIds,\n      avatarUrl: `https://placehold.co/100x100.png?text=${getInitials(data.groupName)}`,\n      createdAt: formatISO(new Date()),\n      createdBy: currentUser.uid,\n    };\n\n    mockGroupChats.push(newGroup); // Add to global mock array\n\n    toast({\n      title: \"Group Created\",\n      description: `Group \"${newGroup.name}\" has been successfully created.`,\n    });\n\n    onGroupCreated(newGroup); // Callback to inform parent\n    form.reset();\n    setIsSubmitting(false);\n    setIsOpen(false);\n  }\n\n  return (\n    <Dialog open={isOpen} onOpenChange={setIsOpen}>\n      <DialogTrigger asChild>{children}</DialogTrigger>\n      <DialogContent className=\"sm:max-w-[480px]\">\n        <DialogHeader>\n          <DialogTitle>Create New Group Chat</DialogTitle>\n          <DialogDescription>\n            Name your group and select members to start a conversation.\n          </DialogDescription>\n        </DialogHeader>\n        <Form {...form}>\n          <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6 py-2\">\n            <FormField\n              control={form.control}\n              name=\"groupName\"\n              render={({ field }) => (\n                <FormItem>\n                  <FormLabel>Group Name</FormLabel>\n                  <FormControl>\n                    <Input placeholder=\"e.g., Project Alpha Team\" {...field} disabled={isSubmitting} />\n                  </FormControl>\n                  <FormMessage />\n                </FormItem>\n              )}\n            />\n\n            <FormField\n              control={form.control}\n              name=\"memberIds\"\n              render={() => (\n                <FormItem>\n                  <div className=\"mb-2\">\n                    <FormLabel className=\"text-base\">Select Members</FormLabel>\n                    <FormDescription>\n                      Choose who you want to add to this group.\n                    </FormDescription>\n                  </div>\n                  <ScrollArea className=\"h-48 w-full rounded-md border p-4\">\n                    {availableMembers.length > 0 ? (\n                      availableMembers.map((member) => (\n                        <FormField\n                          key={member.uid}\n                          control={form.control}\n                          name=\"memberIds\"\n                          render={({ field }) => {\n                            return (\n                              <FormItem\n                                key={member.uid}\n                                className=\"flex flex-row items-start space-x-3 space-y-0 py-2\"\n                              >\n                                <FormControl>\n                                  <Checkbox\n                                    checked={field.value?.includes(member.uid)}\n                                    onCheckedChange={(checked) => {\n                                      return checked\n                                        ? field.onChange([...(field.value || []), member.uid])\n                                        : field.onChange(\n                                            field.value?.filter(\n                                              (value) => value !== member.uid\n                                            )\n                                          );\n                                    }}\n                                    disabled={isSubmitting}\n                                  />\n                                </FormControl>\n                                <FormLabel className=\"font-normal\">\n                                  {member.name} ({member.designation || member.role})\n                                </FormLabel>\n                              </FormItem>\n                            );\n                          }}\n                        />\n                      ))\n                    ) : (\n                      <p className=\"text-sm text-muted-foreground\">No other users available to add.</p>\n                    )}\n                  </ScrollArea>\n                  <FormMessage /> {/* For the memberIds array itself */}\n                </FormItem>\n              )}\n            />\n            <DialogFooter>\n              <Button type=\"button\" variant=\"outline\" onClick={() => { setIsOpen(false); form.reset(); }} disabled={isSubmitting}>\n                Cancel\n              </Button>\n              <Button type=\"submit\" disabled={isSubmitting}>\n                {isSubmitting && <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />}\n                Create Group\n              </Button>\n            </DialogFooter>\n          </form>\n        </Form>\n      </DialogContent>\n    </Dialog>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;AASA;AASA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAlCA;;;;;;;;;;;;;;;;;AAoCA,MAAM,oBAAoB,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,EAAE;IACjC,WAAW,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,IAAI,GAAG,CAAC,GAAG;QAAE,SAAS;IAA4C;IACpF,WAAW,CAAA,GAAA,uIAAA,CAAA,QAAO,AAAD,EAAE,CAAA,GAAA,uIAAA,CAAA,SAAQ,AAAD,KAAK,GAAG,CAAC,GAAG;QAAE,SAAS;IAA8B;AACjF;AASO,SAAS,kBAAkB,EAAE,cAAc,EAAE,QAAQ,EAA0B;;IACpF,MAAM,EAAE,WAAW,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD;IAC9B,MAAM,EAAE,KAAK,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,WAAQ,AAAD;IACzB,MAAM,CAAC,QAAQ,UAAU,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IACrC,MAAM,CAAC,cAAc,gBAAgB,GAAG,CAAA,GAAA,6JAAA,CAAA,WAAQ,AAAD,EAAE;IAEjD,MAAM,mBAAmB,6HAAA,CAAA,YAAS,CAAC,MAAM,CAAC,CAAA,OAAQ,KAAK,GAAG,KAAK,aAAa;IAE5E,MAAM,OAAO,CAAA,GAAA,iKAAA,CAAA,UAAO,AAAD,EAAyB;QAC1C,UAAU,CAAA,GAAA,iKAAA,CAAA,cAAW,AAAD,EAAE;QACtB,eAAe;YACb,WAAW;YACX,WAAW,EAAE;QACf;IACF;IAEA,SAAS,SAAS,IAA2B;QAC3C,IAAI,CAAC,aAAa;YAChB,MAAM;gBAAE,OAAO;gBAAS,aAAa;gBAA4C,SAAS;YAAc;YACxG;QACF;QACA,gBAAgB;QAEhB,MAAM,aAAa,CAAC,MAAM,EAAE,KAAK,GAAG,IAAI;QACxC,MAAM,eAAe,MAAM,IAAI,CAAC,IAAI,IAAI;YAAC,YAAY,GAAG;eAAK,KAAK,SAAS;SAAC,IAAI,6BAA6B;QAE7G,MAAM,WAAsB;YAC1B,IAAI;YACJ,MAAM,KAAK,SAAS;YACpB,WAAW;YACX,WAAW,CAAC,sCAAsC,EAAE,CAAA,GAAA,sHAAA,CAAA,cAAW,AAAD,EAAE,KAAK,SAAS,GAAG;YACjF,WAAW,CAAA,GAAA,4IAAA,CAAA,YAAS,AAAD,EAAE,IAAI;YACzB,WAAW,YAAY,GAAG;QAC5B;QAEA,6HAAA,CAAA,iBAAc,CAAC,IAAI,CAAC,WAAW,2BAA2B;QAE1D,MAAM;YACJ,OAAO;YACP,aAAa,CAAC,OAAO,EAAE,SAAS,IAAI,CAAC,gCAAgC,CAAC;QACxE;QAEA,eAAe,WAAW,4BAA4B;QACtD,KAAK,KAAK;QACV,gBAAgB;QAChB,UAAU;IACZ;IAEA,qBACE,6LAAC,qIAAA,CAAA,SAAM;QAAC,MAAM;QAAQ,cAAc;;0BAClC,6LAAC,qIAAA,CAAA,gBAAa;gBAAC,OAAO;0BAAE;;;;;;0BACxB,6LAAC,qIAAA,CAAA,gBAAa;gBAAC,WAAU;;kCACvB,6LAAC,qIAAA,CAAA,eAAY;;0CACX,6LAAC,qIAAA,CAAA,cAAW;0CAAC;;;;;;0CACb,6LAAC,qIAAA,CAAA,oBAAiB;0CAAC;;;;;;;;;;;;kCAIrB,6LAAC,mIAAA,CAAA,OAAI;wBAAE,GAAG,IAAI;kCACZ,cAAA,6LAAC;4BAAK,UAAU,KAAK,YAAY,CAAC;4BAAW,WAAU;;8CACrD,6LAAC,mIAAA,CAAA,YAAS;oCACR,SAAS,KAAK,OAAO;oCACrB,MAAK;oCACL,QAAQ,CAAC,EAAE,KAAK,EAAE,iBAChB,6LAAC,mIAAA,CAAA,WAAQ;;8DACP,6LAAC,mIAAA,CAAA,YAAS;8DAAC;;;;;;8DACX,6LAAC,mIAAA,CAAA,cAAW;8DACV,cAAA,6LAAC,oIAAA,CAAA,QAAK;wDAAC,aAAY;wDAA4B,GAAG,KAAK;wDAAE,UAAU;;;;;;;;;;;8DAErE,6LAAC,mIAAA,CAAA,cAAW;;;;;;;;;;;;;;;;8CAKlB,6LAAC,mIAAA,CAAA,YAAS;oCACR,SAAS,KAAK,OAAO;oCACrB,MAAK;oCACL,QAAQ,kBACN,6LAAC,mIAAA,CAAA,WAAQ;;8DACP,6LAAC;oDAAI,WAAU;;sEACb,6LAAC,mIAAA,CAAA,YAAS;4DAAC,WAAU;sEAAY;;;;;;sEACjC,6LAAC,mIAAA,CAAA,kBAAe;sEAAC;;;;;;;;;;;;8DAInB,6LAAC,6IAAA,CAAA,aAAU;oDAAC,WAAU;8DACnB,iBAAiB,MAAM,GAAG,IACzB,iBAAiB,GAAG,CAAC,CAAC,uBACpB,6LAAC,mIAAA,CAAA,YAAS;4DAER,SAAS,KAAK,OAAO;4DACrB,MAAK;4DACL,QAAQ,CAAC,EAAE,KAAK,EAAE;gEAChB,qBACE,6LAAC,mIAAA,CAAA,WAAQ;oEAEP,WAAU;;sFAEV,6LAAC,mIAAA,CAAA,cAAW;sFACV,cAAA,6LAAC,uIAAA,CAAA,WAAQ;gFACP,SAAS,MAAM,KAAK,EAAE,SAAS,OAAO,GAAG;gFACzC,iBAAiB,CAAC;oFAChB,OAAO,UACH,MAAM,QAAQ,CAAC;2FAAK,MAAM,KAAK,IAAI,EAAE;wFAAG,OAAO,GAAG;qFAAC,IACnD,MAAM,QAAQ,CACZ,MAAM,KAAK,EAAE,OACX,CAAC,QAAU,UAAU,OAAO,GAAG;gFAGzC;gFACA,UAAU;;;;;;;;;;;sFAGd,6LAAC,mIAAA,CAAA,YAAS;4EAAC,WAAU;;gFAClB,OAAO,IAAI;gFAAC;gFAAG,OAAO,WAAW,IAAI,OAAO,IAAI;gFAAC;;;;;;;;mEAnB/C,OAAO,GAAG;;;;;4DAuBrB;2DA7BK,OAAO,GAAG;;;;oFAiCnB,6LAAC;wDAAE,WAAU;kEAAgC;;;;;;;;;;;8DAGjD,6LAAC,mIAAA,CAAA,cAAW;;;;;gDAAG;;;;;;;;;;;;8CAIrB,6LAAC,qIAAA,CAAA,eAAY;;sDACX,6LAAC,qIAAA,CAAA,SAAM;4CAAC,MAAK;4CAAS,SAAQ;4CAAU,SAAS;gDAAQ,UAAU;gDAAQ,KAAK,KAAK;4CAAI;4CAAG,UAAU;sDAAc;;;;;;sDAGpH,6LAAC,qIAAA,CAAA,SAAM;4CAAC,MAAK;4CAAS,UAAU;;gDAC7B,8BAAgB,6LAAC,oNAAA,CAAA,UAAO;oDAAC,WAAU;;;;;;gDAA+B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AASnF;GA/IgB;;QACU,kIAAA,CAAA,UAAO;QACb,+HAAA,CAAA,WAAQ;QAMb,iKAAA,CAAA,UAAO;;;KARN","debugId":null}},
    {"offset": {"line": 1006, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/chat/ChatClientPage.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { useState, useEffect, useRef, useCallback } from \"react\";\nimport { Avatar, AvatarFallback, AvatarImage } from \"@/components/ui/avatar\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { ScrollArea } from \"@/components/ui/scroll-area\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Paperclip, Send, User, MessageSquare, Users, PlusCircle } from \"lucide-react\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport type { UserProfile, ChatMessage, GroupChat } from \"@/types\";\nimport { mockUsers, mockChatMessages, mockGroupChats } from \"@/lib/mock-data\";\nimport { getInitials } from \"@/lib/utils\";\nimport { format, parseISO } from \"date-fns\";\nimport { cn } from \"@/lib/utils\";\nimport { Card } from \"../ui/card\";\nimport { CreateGroupDialog } from \"./CreateGroupDialog\";\n\ntype Conversation = UserProfile | GroupChat;\n\nfunction isGroupChat(conversation: Conversation): conversation is GroupChat {\n  return 'memberIds' in conversation;\n}\n\nconst getConversationId = (conversation: Conversation | null): string | undefined => {\n  if (!conversation) return undefined;\n  return isGroupChat(conversation) ? conversation.id : conversation.uid;\n};\n\nexport function ChatClientPage() {\n  const { currentUser } = useAuth();\n  const [allConversations, setAllConversations] = useState<Conversation[]>([]);\n  const [selectedConversation, setSelectedConversation] = useState<Conversation | null>(null);\n  const [messages, setMessages] = useState<ChatMessage[]>(mockChatMessages); // For this mock, messages are global\n  const [newMessage, setNewMessage] = useState(\"\");\n  const messagesEndRef = useRef<null | HTMLDivElement>(null);\n  const [refreshKey, setRefreshKey] = useState(0); // To trigger re-render of conversations list\n\n  useEffect(() => {\n    if (currentUser) {\n      const usersForChat = mockUsers.filter(user => user.uid !== currentUser.uid);\n      const groupsForChat = [...mockGroupChats]; // Get a copy\n      setAllConversations([...usersForChat, ...groupsForChat].sort((a, b) => a.name.localeCompare(b.name)));\n\n      if (!selectedConversation && allConversations.length > 0) {\n        const firstUser = usersForChat[0];\n        if (firstUser) setSelectedConversation(firstUser);\n      }\n    }\n  }, [currentUser, refreshKey, selectedConversation, allConversations.length]); // Added allConversations.length to re-evaluate default selection\n\n  useEffect(() => {\n    messagesEndRef.current?.scrollIntoView({ behavior: \"smooth\" });\n  }, [messages, selectedConversation]);\n\n  const handleGroupCreated = (newGroup: GroupChat) => {\n    setRefreshKey(prev => prev + 1); \n    setSelectedConversation(newGroup); \n  };\n\n  const handleSendMessage = () => {\n    if (newMessage.trim() === \"\" || !currentUser || !selectedConversation) return;\n\n    const messageToSend: ChatMessage = {\n      id: `msg-${Date.now()}`,\n      senderId: currentUser.uid,\n      senderName: currentUser.name,\n      text: newMessage.trim(),\n      timestamp: new Date().toISOString(),\n    };\n\n    if (isGroupChat(selectedConversation)) {\n      messageToSend.groupId = selectedConversation.id;\n    } else {\n      messageToSend.receiverId = selectedConversation.uid;\n    }\n\n    mockChatMessages.push(messageToSend);\n    setMessages([...mockChatMessages]); \n    setNewMessage(\"\");\n  };\n\n  const displayedMessages = messages.filter(msg => {\n    if (!currentUser || !selectedConversation) return false;\n\n    if (isGroupChat(selectedConversation)) {\n      return msg.groupId === selectedConversation.id;\n    } else { \n      return (\n        (msg.senderId === currentUser.uid && msg.receiverId === selectedConversation.uid) ||\n        (msg.senderId === selectedConversation.uid && msg.receiverId === currentUser.uid)\n      );\n    }\n  }).sort((a, b) => parseISO(a.timestamp).getTime() - parseISO(b.timestamp).getTime());\n\n  if (!currentUser) return <p>Loading user...</p>;\n\n  const getConversationAvatar = (conv: Conversation) => {\n    if (isGroupChat(conv)) {\n      return conv.avatarUrl || `https://placehold.co/100x100.png?text=${getInitials(conv.name)}`;\n    }\n    return conv.avatarUrl || `https://placehold.co/100x100.png?text=${getInitials(conv.name)}`;\n  };\n  \n  const getConversationDataAiHint = (conv: Conversation) => {\n    return isGroupChat(conv) ? \"group avatar\" : \"user avatar\";\n  };\n\n\n  return (\n    <div className=\"flex flex-1 border rounded-lg shadow-md overflow-hidden\">\n      <aside className=\"w-1/3 lg:w-1/4 border-r bg-muted/20 flex flex-col\">\n        <div className=\"p-3 border-b flex items-center justify-between\">\n          <h3 className=\"text-lg font-semibold\">Contacts</h3>\n          <CreateGroupDialog onGroupCreated={handleGroupCreated}>\n            <Button variant=\"ghost\" size=\"sm\" className=\"text-primary\">\n              <PlusCircle className=\"h-4 w-4 mr-1\" /> Group\n            </Button>\n          </CreateGroupDialog>\n        </div>\n        <ScrollArea className=\"flex-1\">\n          {allConversations.map(conv => (\n            <Button\n              key={getConversationId(conv)}\n              variant=\"ghost\"\n              className={cn(\n                \"w-full justify-start p-3 rounded-none hover:bg-muted h-auto\",\n                getConversationId(selectedConversation) === getConversationId(conv) && \"bg-muted font-semibold\"\n              )}\n              onClick={() => setSelectedConversation(conv)}\n            >\n              <Avatar className=\"h-9 w-9 mr-3\">\n                <AvatarImage src={getConversationAvatar(conv)} alt={conv.name} data-ai-hint={getConversationDataAiHint(conv)} />\n                <AvatarFallback>{getInitials(conv.name)}</AvatarFallback>\n              </Avatar>\n              <div className=\"flex flex-col items-start text-left\">\n                <span className=\"truncate max-w-[150px]\">{conv.name}</span>\n                {isGroupChat(conv) && (\n                    <span className=\"text-xs text-muted-foreground\">{conv.memberIds.length} members</span>\n                )}\n              </div>\n            </Button>\n          ))}\n        </ScrollArea>\n      </aside>\n\n      <main className=\"flex-1 flex flex-col\">\n        {selectedConversation ? (\n          <>\n            <header className=\"p-4 border-b flex items-center gap-3 bg-muted/40\">\n              <Avatar className=\"h-9 w-9\">\n                <AvatarImage src={getConversationAvatar(selectedConversation)} alt={selectedConversation.name} data-ai-hint={getConversationDataAiHint(selectedConversation)} />\n                <AvatarFallback>{getInitials(selectedConversation.name)}</AvatarFallback>\n              </Avatar>\n              <div>\n                <h2 className=\"text-lg font-semibold\">{selectedConversation.name}</h2>\n                {isGroupChat(selectedConversation) ? (\n                    <p className=\"text-xs text-muted-foreground\">{selectedConversation.memberIds.length} members</p>\n                ) : (\n                    <p className=\"text-xs text-muted-foreground\">{(selectedConversation as UserProfile).designation || (selectedConversation as UserProfile).role}</p>\n                )}\n              </div>\n            </header>\n\n            <ScrollArea className=\"flex-1 p-4 space-y-4 bg-background\">\n              {displayedMessages.length > 0 ? displayedMessages.map(msg => (\n                <div\n                  key={msg.id}\n                  className={cn(\n                    \"flex items-end gap-2 max-w-[75%]\",\n                    msg.senderId === currentUser.uid ? \"ml-auto flex-row-reverse\" : \"mr-auto\"\n                  )}\n                >\n                  <Avatar className=\"h-7 w-7\">\n                    <AvatarImage src={mockUsers.find(u => u.uid === msg.senderId)?.avatarUrl} alt={msg.senderName} data-ai-hint=\"message sender avatar\" />\n                    <AvatarFallback>{getInitials(msg.senderName)}</AvatarFallback>\n                  </Avatar>\n                  <Card className={cn(\n                    \"p-3 rounded-lg shadow\",\n                    msg.senderId === currentUser.uid ? \"bg-primary text-primary-foreground\" : \"bg-secondary text-secondary-foreground\"\n                  )}>\n                    <p className=\"text-sm\">{msg.text}</p>\n                    <p className={cn(\n                      \"text-xs mt-1\",\n                      msg.senderId === currentUser.uid ? \"text-primary-foreground/70 text-right\" : \"text-secondary-foreground/70 text-left\"\n                    )}>\n                      {format(parseISO(msg.timestamp), \"p\")}\n                    </p>\n                  </Card>\n                </div>\n              )) : (\n                <div className=\"flex-1 flex flex-col items-center justify-center text-muted-foreground h-full\">\n                  <MessageSquare className=\"h-16 w-16 mb-4 text-muted-foreground/50\" />\n                  <p className=\"text-lg\">No messages yet.</p>\n                  <p className=\"text-sm\">Start the conversation!</p>\n                </div>\n              )}\n              <div ref={messagesEndRef} />\n            </ScrollArea>\n\n            <Separator />\n\n            <footer className=\"p-3 border-t bg-muted/30\">\n              <form onSubmit={(e) => { e.preventDefault(); handleSendMessage(); }} className=\"flex items-center gap-2\">\n                <Button type=\"button\" variant=\"ghost\" size=\"icon\" className=\"text-muted-foreground hover:text-primary\" disabled>\n                  <Paperclip className=\"h-5 w-5\" />\n                  <span className=\"sr-only\">Attach file (not implemented)</span>\n                </Button>\n                <Input\n                  type=\"text\"\n                  placeholder=\"Type a message...\"\n                  value={newMessage}\n                  onChange={(e) => setNewMessage(e.target.value)}\n                  className=\"flex-1 bg-background\"\n                  autoFocus\n                />\n                <Button type=\"submit\" size=\"icon\">\n                  <Send className=\"h-5 w-5\" />\n                  <span className=\"sr-only\">Send message</span>\n                </Button>\n              </form>\n            </footer>\n          </>\n        ) : (\n          <div className=\"flex-1 flex flex-col items-center justify-center text-muted-foreground\">\n            <Users className=\"h-16 w-16 mb-4\" />\n            <p className=\"text-lg\">Select a user or group to start chatting.</p>\n          </div>\n        )}\n      </main>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1594, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/chat/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { PageHeader } from \"@/components/shared/PageHeader\";\nimport { ChatClientPage } from \"@/components/chat/ChatClientPage\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { useRouter } from \"next/navigation\";\nimport { useEffect } from \"react\";\nimport { Loader2 } from \"lucide-react\";\n\nexport default function ChatPage() {\n  const { currentUser, isLoading } = useAuth();\n  const router = useRouter();\n\n  useEffect(() => {\n    if (!isLoading && !currentUser) {\n      router.replace(\"/login\");\n    }\n  }, [currentUser, isLoading, router]);\n\n  if (isLoading || !currentUser) {\n    return (\n      <div className=\"flex flex-col items-center justify-center min-h-[calc(100vh-10rem)] p-4\">\n        <Loader2 className=\"h-12 w-12 animate-spin text-primary mb-4\" />\n         <p className=\"text-muted-foreground\">Loading chat...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"h-[calc(100vh-var(--header-height,4rem)-2rem)] flex flex-col\"> {/* Adjust height based on header */}\n      <PageHeader\n        title=\"Team Chat\"\n        description=\"Connect with your team members.\"\n      />\n      <ChatClientPage />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;;;AAPA;;;;;;;AASe,SAAS;;IACtB,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,kIAAA,CAAA,UAAO,AAAD;IACzC,MAAM,SAAS,CAAA,GAAA,qIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,6JAAA,CAAA,YAAS,AAAD;8BAAE;YACR,IAAI,CAAC,aAAa,CAAC,aAAa;gBAC9B,OAAO,OAAO,CAAC;YACjB;QACF;6BAAG;QAAC;QAAa;QAAW;KAAO;IAEnC,IAAI,aAAa,CAAC,aAAa;QAC7B,qBACE,6LAAC;YAAI,WAAU;;8BACb,6LAAC,oNAAA,CAAA,UAAO;oBAAC,WAAU;;;;;;8BAClB,6LAAC;oBAAE,WAAU;8BAAwB;;;;;;;;;;;;IAG5C;IAEA,qBACE,6LAAC;QAAI,WAAU;;YAA+D;0BAC5E,6LAAC,6IAAA,CAAA,aAAU;gBACT,OAAM;gBACN,aAAY;;;;;;0BAEd,6LAAC,+IAAA,CAAA,iBAAc;;;;;;;;;;;AAGrB;GA5BwB;;QACa,kIAAA,CAAA,UAAO;QAC3B,qIAAA,CAAA,YAAS;;;KAFF","debugId":null}}]
}