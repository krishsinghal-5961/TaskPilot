{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/shared/PageHeader.tsx"],"sourcesContent":["import type { ReactNode } from 'react';\n\ninterface PageHeaderProps {\n  title: string;\n  description?: string;\n  actions?: ReactNode;\n}\n\nexport function PageHeader({ title, description, actions }: PageHeaderProps) {\n  return (\n    <div className=\"mb-6 md:flex md:items-center md:justify-between\">\n      <div className=\"min-w-0 flex-1\">\n        <h1 className=\"text-2xl font-bold leading-tight text-foreground sm:text-3xl sm:truncate\">\n          {title}\n        </h1>\n        {description && (\n          <p className=\"mt-1 text-sm text-muted-foreground\">{description}</p>\n        )}\n      </div>\n      {actions && <div className=\"mt-4 flex md:ml-4 md:mt-0\">{actions}</div>}\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;;AAQO,SAAS,WAAW,EAAE,KAAK,EAAE,WAAW,EAAE,OAAO,EAAmB;IACzE,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC;gBAAI,WAAU;;kCACb,8OAAC;wBAAG,WAAU;kCACX;;;;;;oBAEF,6BACC,8OAAC;wBAAE,WAAU;kCAAsC;;;;;;;;;;;;YAGtD,yBAAW,8OAAC;gBAAI,WAAU;0BAA6B;;;;;;;;;;;;AAG9D","debugId":null}},
    {"offset": {"line": 62, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 94, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 247, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 275, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 467, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 548, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/ai/flows/suggest-due-date.ts"],"sourcesContent":["\n'use server';\n\n/**\n * @fileOverview AI-powered due date and assignee suggestion for tasks, considering team workload.\n *\n * - suggestDueDate - A function that suggests a due date and assignee(s) for a task.\n * - SuggestDueDateInput - The input type for the suggestDueDate function.\n * - SuggestDueDateOutput - The return type for the suggestDueDate function.\n */\n\nimport {ai} from '@/ai/genkit';\nimport {z} from 'genkit';\n\nconst SuggestDueDateInputSchema = z.object({\n  taskDescription: z.string().describe('Description of the task to be completed.'),\n  teamMembers: z\n    .array(z.object({name: z.string(), currentWorkload: z.number().min(0).max(100)}))\n    .describe('List of team members and their current workload as a percentage.'),\n  priority: z.enum(['high', 'medium', 'low']).describe('Priority of the task.'),\n  currentDate: z.string().describe('The current date in YYYY-MM-DD format.'),\n});\n\nexport type SuggestDueDateInput = z.infer<typeof SuggestDueDateInputSchema>;\n\nconst SuggestDueDateOutputSchema = z.object({\n  suggestedDueDate: z.string().describe('Suggested due date for the task in ISO format (YYYY-MM-DD).'),\n  reasoningForDueDate: z.string().describe('Explanation for why the suggested due date was chosen.'),\n  suggestedAssignees: z.array(z.object({\n    name: z.string().describe('Name of the suggested team member.'),\n    reasoningForAssignment: z.string().describe('Explanation for why this member was suggested for the task.'),\n  })).min(1).describe('List of at least one suggested team member to assign the task to. If multiple members are recommended, it implies they could collaborate or the task could be split.'),\n  projectedWorkloadAfterAssignment: z\n    .array(z.object({\n        name: z.string().describe('Name of the team member, matching one from the input list.'),\n        projectedWorkload: z.number().min(0).max(100).describe('Projected workload percentage for this team member (0-100) after the task assignment. If not assigned the current task, this should be their original currentWorkload.')\n    }))\n    .describe('Projected workload for ALL team members originally listed in the input, after your suggested task assignment. Each member from the input must have an entry here.'),\n});\n\nexport type SuggestDueDateOutput = z.infer<typeof SuggestDueDateOutputSchema>;\n\nexport async function suggestDueDate(input: SuggestDueDateInput): Promise<SuggestDueDateOutput> {\n  // The client component will now fetch team members and pass them in the input.\n  return suggestDueDateFlow(input);\n}\n\nconst suggestDueDatePrompt = ai.definePrompt({\n  name: 'suggestDueDatePrompt',\n  input: {schema: SuggestDueDateInputSchema},\n  output: {schema: SuggestDueDateOutputSchema},\n  prompt: `You are an AI assistant expert in project management and team optimization. Your role is to help project managers assign tasks effectively.\n\nBased on the provided task details and team member information, you will:\n1. Suggest an optimal due date for the task (format: YYYY-MM-DD).\n2. Recommend one or more suitable team members to assign the task to from the provided list. If multiple members are recommended, it implies they could collaborate or the task could be split. You MUST suggest at least one assignee.\n3. Provide clear reasoning for both the due date suggestion and the assignee suggestion(s). For assignees, explain why they are a good fit considering their current workload and the task nature.\n4. Calculate and provide the projected workload for ALL team members originally listed in the input, assuming your assignment recommendation is followed. The projected workload should reflect their load *after* this new task is hypothetically assigned to the suggested member(s). For members not assigned this specific task, their workload remains their current workload. Ensure this array contains an entry for every team member from the input.\n\nTask Details:\n- Description: {{{taskDescription}}}\n- Priority: {{{priority}}}\n- Current Date: {{{currentDate}}}\n\nTeam Members (Name, Current Workload %):\n{{#each teamMembers}}\n- {{{name}}}: {{{currentWorkload}}}%\n{{/each}}\n\nOutput format:\nEnsure your response is ONLY a valid JSON object adhering to the provided output schema. Do not include any explanatory text before or after the JSON.\nThe suggested due date must be in YYYY-MM-DD format.\nProjected workloads must be a number between 0 and 100 percent.\nThe 'projectedWorkloadAfterAssignment' array MUST include an entry for every team member originally provided in the input.\nThe 'suggestedAssignees' array MUST contain at least one assignee.\n\nExample of the expected JSON structure (DO NOT just copy this example, generate values based on the input):\n{\n  \"suggestedDueDate\": \"YYYY-MM-DD\",\n  \"reasoningForDueDate\": \"Detailed explanation...\",\n  \"suggestedAssignees\": [\n    {\n      \"name\": \"Team Member A Name\",\n      \"reasoningForAssignment\": \"Reason for assigning to A...\"\n    }\n    // ... more assignees if applicable\n  ],\n  \"projectedWorkloadAfterAssignment\": [\n    {\n      \"name\": \"Team Member A Name\", // Must match a name from input\n      \"projectedWorkload\": 75 // Example percentage\n    },\n    {\n      \"name\": \"Team Member B Name\", // Must match a name from input\n      \"projectedWorkload\": 50 // Example percentage\n    }\n    // ... and so on for ALL original team members\n  ]\n}\n`,\n  config: {\n    safetySettings: [\n      { category: 'HARM_CATEGORY_HATE_SPEECH', threshold: 'BLOCK_NONE' },\n      { category: 'HARM_CATEGORY_DANGEROUS_CONTENT', threshold: 'BLOCK_NONE' },\n      { category: 'HARM_CATEGORY_HARASSMENT', threshold: 'BLOCK_NONE' },\n      { category: 'HARM_CATEGORY_SEXUALLY_EXPLICIT', threshold: 'BLOCK_NONE' },\n    ],\n  },\n});\n\nconst suggestDueDateFlow = ai.defineFlow(\n  {\n    name: 'suggestDueDateFlow',\n    inputSchema: SuggestDueDateInputSchema,\n    outputSchema: SuggestDueDateOutputSchema,\n  },\n  async input => {\n    const generationResponse = await suggestDueDatePrompt(input);\n    const output = generationResponse.output;\n\n    if (!output) {\n      console.error(\n        \"AI response output was null or undefined from suggestDueDatePrompt. This usually means the AI's response did not match the expected schema or was blocked. Input:\",\n        JSON.stringify(input, null, 2),\n        \"Full AI generationResponse object:\",\n        JSON.stringify(generationResponse, null, 2)\n      );\n      throw new Error(\n        \"AI response did not yield a usable output. It might be empty, malformed, or blocked by content filters. Check the server console for the full AI response details, including any 'finishReason' or 'candidates' information.\"\n      );\n    }\n     // Basic validation of output structure (Zod already does this on prompt definition if schema is well-defined)\n    if (!output.suggestedDueDate || !Array.isArray(output.suggestedAssignees) || output.suggestedAssignees.length === 0 || !Array.isArray(output.projectedWorkloadAfterAssignment)) {\n        console.error(\n            \"AI response output is missing required fields or 'suggestedAssignees' is empty. Output:\",\n            JSON.stringify(output, null, 2),\n            \"Input:\",\n            JSON.stringify(input, null, 2),\n            \"Full generationResponse:\",\n            JSON.stringify(generationResponse, null, 2)\n        );\n        throw new Error(\"AI response is malformed or missing critical fields. Check server logs for details on the output received from the AI.\");\n    }\n    \n    // Ensure all input team members are in the projected workload\n    if (output.projectedWorkloadAfterAssignment.length !== input.teamMembers.length) {\n        console.warn(\n            \"AI response 'projectedWorkloadAfterAssignment' does not contain an entry for every input team member. Input count:\",\n            input.teamMembers.length, \"Output count:\", output.projectedWorkloadAfterAssignment.length,\n            \"Output:\", JSON.stringify(output.projectedWorkloadAfterAssignment, null, 2)\n        );\n        // Optionally, you could try to fix this here, or throw an error.\n        // For now, we'll let it pass but log a warning.\n    }\n\n\n    return output;\n  }\n);\n\n"],"names":[],"mappings":";;;;;IA0CsB","debugId":null}},
    {"offset": {"line": 560, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,8OAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 624, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/assisted-assignment/AssistedAssignmentClientPage.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { zodResolver } from \"@hookform/resolvers/zod\";\nimport { useForm } from \"react-hook-form\";\nimport * as z from \"zod\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from \"@/components/ui/form\";\nimport { Input } from \"@/components/ui/input\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Loader2, Wand2, Users, CalendarCheck, BarChart3, Info } from \"lucide-react\";\nimport { suggestDueDate, type SuggestDueDateInput, type SuggestDueDateOutput } from \"@/ai/flows/suggest-due-date\";\nimport { useState, useEffect } from \"react\";\nimport { useToast } from \"@/hooks/use-toast\";\nimport type { UserProfile } from \"@/types\";\nimport { format, parseISO } from \"date-fns\";\nimport { Separator } from \"@/components/ui/separator\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { mockUsers } from \"@/lib/mock-data\"; // Using mock data\n\n\nconst assistedAssignmentSchema = z.object({\n  taskDescription: z.string().min(10, { message: \"Description must be at least 10 characters.\" }),\n  priority: z.enum([\"low\", \"medium\", \"high\"]),\n});\n\ntype AssistedAssignmentFormValues = z.infer<typeof assistedAssignmentSchema>;\n\nexport function AssistedAssignmentClientPage() {\n  const { toast } = useToast();\n  const { currentUser } = useAuth();\n  const [isAISuggesting, setIsAISuggesting] = useState(false);\n  const [aiResult, setAiResult] = useState<SuggestDueDateOutput | null>(null);\n  const [teamMembersData, setTeamMembersData] = useState<UserProfile[]>([]);\n  const [teamMembersLoading, setTeamMembersLoading] = useState(true);\n\n\n  useEffect(() => {\n    if (currentUser) {\n      // Simulate fetching team members\n      setTeamMembersData(mockUsers.filter(user => user.role === 'employee'));\n      setTeamMembersLoading(false);\n    }\n  }, [currentUser]);\n\n  const form = useForm<AssistedAssignmentFormValues>({\n    resolver: zodResolver(assistedAssignmentSchema),\n    defaultValues: {\n      taskDescription: \"\",\n      priority: \"medium\",\n    },\n  });\n\n  async function onSubmit(data: AssistedAssignmentFormValues) {\n    setIsAISuggesting(true);\n    setAiResult(null);\n    try {\n      const currentDate = new Date().toISOString().split('T')[0]; \n      \n      if (!teamMembersData || teamMembersData.length === 0) {\n        toast({\n          title: \"No Team Members\",\n          description: \"Could not find any employees to assign tasks to. Please add employees in the Team Management section.\",\n          variant: \"destructive\",\n        });\n        setIsAISuggesting(false);\n        return;\n      }\n      \n      const employeesForAI = teamMembersData\n        .map(user => ({\n          name: user.name,\n          currentWorkload: user.currentWorkload || 0,\n        }));\n\n      if (employeesForAI.length === 0) {\n        toast({\n          title: \"No Employees Found\",\n          description: \"No users with the 'employee' role found for AI suggestion.\",\n          variant: \"destructive\",\n        });\n        setIsAISuggesting(false);\n        return;\n      }\n      \n      const inputForAI: SuggestDueDateInput = {\n        ...data,\n        teamMembers: employeesForAI,\n        currentDate,\n      };\n\n      const result = await suggestDueDate(inputForAI);\n      setAiResult(result);\n      toast({\n        title: \"Suggestion Received\",\n        description: \"AI has suggested a due date and assignee(s).\",\n      });\n    } catch (error) {\n      console.error(\"Error calling AI flow:\", error);\n      let errorMessage = \"Failed to get suggestion from AI. Please try again. Ensure GOOGLE_API_KEY is set if using Google AI.\";\n      if (error instanceof Error) {\n        errorMessage = error.message;\n      }\n      toast({\n        title: \"Error\",\n        description: errorMessage,\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsAISuggesting(false);\n    }\n  }\n\n  return (\n    <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-8\">\n      <Card className=\"shadow-md\">\n        <CardHeader>\n          <CardTitle>Task Details for AI Suggestion</CardTitle>\n          <CardDescription>Provide task information. The AI will use current employee data for workload analysis.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          <Form {...form}>\n            <form onSubmit={form.handleSubmit(onSubmit)} className=\"space-y-6\">\n              <FormField\n                control={form.control}\n                name=\"taskDescription\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Task Description</FormLabel>\n                    <FormControl>\n                      <Textarea placeholder=\"Describe the task to be assigned...\" {...field} rows={4} disabled={isAISuggesting || teamMembersLoading} />\n                    </FormControl>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n\n              <FormField\n                control={form.control}\n                name=\"priority\"\n                render={({ field }) => (\n                  <FormItem>\n                    <FormLabel>Priority</FormLabel>\n                    <Select onValueChange={field.onChange} defaultValue={field.value} disabled={isAISuggesting || teamMembersLoading}>\n                      <FormControl>\n                        <SelectTrigger>\n                          <SelectValue placeholder=\"Select task priority\" />\n                        </SelectTrigger>\n                      </FormControl>\n                      <SelectContent>\n                        <SelectItem value=\"low\">Low</SelectItem>\n                        <SelectItem value=\"medium\">Medium</SelectItem>\n                        <SelectItem value=\"high\">High</SelectItem>\n                      </SelectContent>\n                    </Select>\n                    <FormMessage />\n                  </FormItem>\n                )}\n              />\n              \n              <Alert>\n                <Info className=\"h-4 w-4\" />\n                <AlertTitle>Team Data {teamMembersLoading && <Loader2 className=\"inline h-4 w-4 animate-spin ml-2\" />}</AlertTitle>\n                <AlertDescription>\n                  The AI will automatically consider all current employees and their workloads.\n                  {teamMembersLoading && \" Loading team data...\"}\n                </AlertDescription>\n              </Alert>\n              \n              <Button type=\"submit\" disabled={isAISuggesting || teamMembersLoading} className=\"w-full\">\n                {isAISuggesting || teamMembersLoading ? (\n                  <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                ) : (\n                  <Wand2 className=\"mr-2 h-4 w-4\" />\n                )}\n                {teamMembersLoading ? \"Loading Team...\" : isAISuggesting ? \"Getting Suggestion...\" : \"Get AI Suggestion\"}\n              </Button>\n            </form>\n          </Form>\n        </CardContent>\n      </Card>\n\n      <Card className=\"shadow-md\">\n        <CardHeader>\n          <CardTitle>AI Suggestion</CardTitle>\n          <CardDescription>The AI's recommendations for due date, assignee(s), and workload will appear here.</CardDescription>\n        </CardHeader>\n        <CardContent>\n          {isAISuggesting && (\n            <div className=\"flex flex-col items-center justify-center h-40 text-muted-foreground\">\n              <Loader2 className=\"h-8 w-8 animate-spin mb-2\" />\n              <p>Generating suggestion...</p>\n            </div>\n          )}\n          {!isAISuggesting && !aiResult && (\n            <p className=\"text-muted-foreground text-center py-10\">Submit the form to get an AI suggestion.</p>\n          )}\n          {aiResult && (\n            <div className=\"space-y-6\">\n              <div>\n                <h3 className=\"font-semibold text-lg text-primary flex items-center\"><CalendarCheck className=\"mr-2 h-5 w-5\" />Suggested Due Date:</h3>\n                <p className=\"text-xl ml-7\">{format(parseISO(aiResult.suggestedDueDate), \"PPP\")} ({aiResult.suggestedDueDate})</p>\n                <h4 className=\"font-medium mt-1 ml-7\">Reasoning:</h4>\n                <p className=\"text-sm text-muted-foreground ml-7 whitespace-pre-wrap\">{aiResult.reasoningForDueDate}</p>\n              </div>\n\n              <Separator />\n\n              <div>\n                <h3 className=\"font-semibold text-lg text-primary flex items-center\"><Users className=\"mr-2 h-5 w-5\" />Suggested Assignee(s):</h3>\n                {aiResult.suggestedAssignees.length > 0 ? (\n                  aiResult.suggestedAssignees.map((assignee, index) => (\n                    <div key={index} className=\"ml-7 mt-2 p-3 bg-secondary/30 rounded-md\">\n                      <p className=\"text-lg font-medium\">{assignee.name}</p>\n                      <h4 className=\"font-medium mt-1\">Reasoning for Assignment:</h4>\n                      <p className=\"text-sm text-muted-foreground whitespace-pre-wrap\">{assignee.reasoningForAssignment}</p>\n                    </div>\n                  ))\n                ) : (\n                  <p className=\"text-sm text-muted-foreground ml-7\">AI did not suggest specific assignees.</p>\n                )}\n              </div>\n              \n              <Separator />\n\n              <div>\n                <h3 className=\"font-semibold text-lg text-primary flex items-center\"><BarChart3 className=\"mr-2 h-5 w-5\" />Projected Workload After Assignment:</h3>\n                <ul className=\"list-disc list-inside text-muted-foreground ml-7 mt-2 space-y-1\">\n                  {aiResult.projectedWorkloadAfterAssignment.map(member => (\n                    <li key={member.name}>{member.name}: {member.projectedWorkload}%</li>\n                  ))}\n                </ul>\n              </div>\n            </div>\n          )}\n        </CardContent>\n        {aiResult && (\n            <CardFooter>\n                <p className=\"text-xs text-muted-foreground\">Note: This is an AI-generated suggestion. Please review carefully before finalizing.</p>\n            </CardFooter>\n        )}\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 1292, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/assisted-assignment/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { PageHeader } from \"@/components/shared/PageHeader\";\nimport { AssistedAssignmentClientPage } from \"@/components/assisted-assignment/AssistedAssignmentClientPage\";\nimport { useAuth } from \"@/contexts/AuthContext\";\nimport { useRouter } from \"next/navigation\";\nimport { useEffect } from \"react\";\nimport { Loader2 } from \"lucide-react\";\nimport { Card, CardContent } from \"@/components/ui/card\";\n\nexport default function AssistedAssignmentPage() {\n  const { currentUser, isLoading } = useAuth();\n  const router = useRouter();\n\n  useEffect(() => {\n    if (!isLoading) {\n      if (!currentUser || currentUser.role !== \"manager\") {\n        router.replace(\"/login\"); // Or an unauthorized page\n      }\n    }\n  }, [currentUser, isLoading, router]);\n\n  if (isLoading || !currentUser || currentUser.role !== \"manager\") {\n    return (\n      <div className=\"flex flex-col items-center justify-center min-h-[calc(100vh-10rem)] p-4\">\n        <Loader2 className=\"h-12 w-12 animate-spin text-primary mb-4\" />\n        <p className=\"text-muted-foreground\">Checking access...</p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"space-y-6\">\n      <PageHeader\n        title=\"AI Assisted Task Assignment\"\n        description=\"Leverage AI to suggest optimal due dates for tasks based on team workload and task priority.\"\n      />\n      <AssistedAssignmentClientPage />\n    </div>\n  );\n}\n"],"names":[],"mappings":";;;;AAGA;AACA;AACA;AACA;AACA;AACA;AAPA;;;;;;;;AAUe,SAAS;IACtB,MAAM,EAAE,WAAW,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,+HAAA,CAAA,UAAO,AAAD;IACzC,MAAM,SAAS,CAAA,GAAA,kIAAA,CAAA,YAAS,AAAD;IAEvB,CAAA,GAAA,qMAAA,CAAA,YAAS,AAAD,EAAE;QACR,IAAI,CAAC,WAAW;YACd,IAAI,CAAC,eAAe,YAAY,IAAI,KAAK,WAAW;gBAClD,OAAO,OAAO,CAAC,WAAW,0BAA0B;YACtD;QACF;IACF,GAAG;QAAC;QAAa;QAAW;KAAO;IAEnC,IAAI,aAAa,CAAC,eAAe,YAAY,IAAI,KAAK,WAAW;QAC/D,qBACE,8OAAC;YAAI,WAAU;;8BACb,8OAAC,iNAAA,CAAA,UAAO;oBAAC,WAAU;;;;;;8BACnB,8OAAC;oBAAE,WAAU;8BAAwB;;;;;;;;;;;;IAG3C;IAEA,qBACE,8OAAC;QAAI,WAAU;;0BACb,8OAAC,0IAAA,CAAA,aAAU;gBACT,OAAM;gBACN,aAAY;;;;;;0BAEd,8OAAC,4KAAA,CAAA,+BAA4B;;;;;;;;;;;AAGnC","debugId":null}}]
}